apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk002-my-app
  namespace: skala-practice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sk002-my-app
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8081'
        prometheus.io/path: '/actuator/prometheus'
        update: b4b0bfcf04c7cd0f658321d02714cb5d
      labels:
        app: sk002-my-app
    spec:
      serviceAccountName: default
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - sk002-my-app
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: my-app
        image: amdp-registry.skala-ai.com/skala25a/sk002-seconde-app:2.0.0-4-b842c0f62c78
        imagePullPolicy: Always
        env:
        - name: LOGGING_LEVEL
          value: DEBUG
        - name: USER_NAME
          value: sk002
        - name: NAMESPACE
          value: skala-practice
